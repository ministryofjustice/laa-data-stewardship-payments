name: Deploy API to Environment

on:
  workflow_call:
    inputs:
      github_environment:
        type: string
        required: true
    secrets:
      ecr_role_to_assume:
        required: true
      kube_cluster:
        required: true
      kube_token:
        required: true
      kube_namespace:
        required: true
      kube_cert:
        required: true

  jobs:
    deploy-to-uat:
      runs-on: ubuntu-latest
      environment:
        name: ${{ inputs.github_environment }}
      permissions:
        id-token: write # This is required for requesting the JWT
        contents: read # This is required for actions/checkout
      steps:
        - run: echo "Deploying to ${{ inputs.github_environment }}"
        - name: Checkout only deployment files
          uses: actions/checkout@v4
          with:
            sparse-checkout: |
              deployments/templates
            sparse-checkout-cone-mode: false
            fetch-depth: 1
        - uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: ${{ secrets.ecr_role_to_assume }}
            aws-region: ${{ vars.ECR_REGION }}

        - uses: aws-actions/amazon-ecr-login@v2
          id: login-ecr
        - name: Deploy image to ${{ inputs.github_environment }}
          run: |
            cat deployments/templates/deployment.yml | envsubst > deployments/deployment.yml
            cat deployments/templates/ingress.yml | envsubst > deployments/ingress.yml
            cat deployments/templates/service.yml | envsubst > deployments/service.yml
          env:
            IMAGE_TAG: ${{ github.sha }}
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: ${{ vars.ECR_REPOSITORY }}
            NAMESPACE: ${{ secrets.kube_namespace }}
        - run: |
            echo "${{ secrets.kube_cert }}" > ca.crt
            kubectl config set-cluster ${{ secrets.kube_cluster }} --certificate-authority=./ca.crt --server=https://${{ secrets.kube_cluster }}
            kubectl config set-credentials deploy-user --token=${{ secrets.kube_token }}
            kubectl config set-context ${{ secrets.kube_cluster }} --cluster=${{ secrets.kube_cluster }} --user=deploy-user --namespace=${{ secrets.kube_namespace }}
            kubectl config use-context ${{ secrets.kube_cluster }}
            kubectl -n ${{ secrets.kube_namespace }} apply -f deployments/
